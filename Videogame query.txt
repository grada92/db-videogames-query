SELECT

1- Selezionare tutte le software house americane (3)


   select * from software_houses  where country = 'United States'


2- Selezionare tutti i giocatori della città di 'Rogahnland' (2)


   select * from players where city = 'Rogahnland'


3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)


   select * from players where name like '%a'


4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)


   select * from reviews  where player_id  = 800


5- Contare quanti tornei ci sono stati nell'anno 2015 (9)


   select * from tournaments where `year` = 2015


6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)


   select * from awards where description like '%	facere%'


7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli unasola volta (del videogioco vogliamo solo l'ID) (287)


   select distinct videogame_id from category_videogame where category_id = 2 or category_id = 6;


8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)


   select * from reviews where rating between 2 and 4;


9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)


   select * from videogames where YEAR (release_date) = 2020


10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da stelle, mostrandoli una sola volta (443)


   select videogame_id from reviews where rating > 0



BONUS


11- Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)


    select count(id) ,avg(rating)  from reviews where 	videogame_id=412;


12- Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)


    select count(id) from videogames where 	YEAR(release_date)=2018 and software_house_id=1;


---------------------------------------------------------



GROUP BY QUERY



1- Contare quante software house ci sono per ogni paese (3)


   SELECT country, COUNT(id) FROM software_houses 	GROUP BY country;


2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)


   select videogame_id, COUNT(id)from reviews group by 	videogame_id 


3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)


   select pegi_label_id, count(id) from pegi_label_videogame group by pegi_label_id ;


4- Mostrare il numero di videogiochi rilasciati ogni anno (11)


   select year(release_date) , COUNT(id) from videogames group by year(release_date) ;


5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)


   select count(id), device_id from device_videogame group by device_id


6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)


   select videogame_id, avg(rating) from reviews group by videogame_id order by avg(rating) desc;



----------------------------------------------------------------------------------------------



INNER JOIN QUERY




1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)


 	select distinct players.*
	from players
	inner join reviews 
	on players.id = reviews.player_id;


2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)


	select videogames.id, videogames.name 
	from videogames 
	join tournament_videogame 
	on tournament_videogame.videogame_id = videogames.id 
	join tournaments 
	on tournaments.id = tournament_videogame.tournament_id 
	where tournaments.year = 2016 
	group by videogames.id;


3- Mostrare le categorie di ogni videogioco (1718)


	select categories.id , categories.name, categories.description 
	from categories 
	join category_videogame
	on category_videogame.category_id = categories.id
	join videogames 
	on videogames.id = category_videogame.videogame_id;


4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)


 	select software_houses.* 
 	from software_houses 
 	join videogames 
 	on videogames.software_house_id = software_houses.id
 	where Year(release_date)>=2020 
 	group by software_houses.id;


5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)


	select software_houses.* 
 	from software_houses 
 	join videogames 
 	on videogames.software_house_id = software_houses.id
 	where Year(release_date)>=2020 
 	group by software_houses.id;
	select software_houses.name, awards.name , videogames.name as videogioco, award_videogame.year as anno from software_houses join videogames on 	videogames.software_house_id = software_houses.id join award_videogame on award_videogame.videogame_id = videogames.id
	join awards  on awards.id = award_videogame.award_id order by award_videogame.year


6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)


      select distinct categories.name as categoria , pegi_labels.name as PEGI , videogames.name as videogioco from videogames join category_videogame on     
      category_videogame.videogame_id = videogames.id join categories on categories.id = category_videogame.category_id 
      join pegi_label_videogame on pegi_label_videogame.videogame_id = videogames.id 
      join pegi_labels on pegi_labels.id = pegi_label_videogame.pegi_label_id join reviews on reviews.videogame_id = videogames.id where reviews.rating >= 4;


7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)


   select DISTINCT videogames.name as videogioco, 
   from videogames
   join tournament_videogame on videogames.id = tournament_videogame.videogame_id
   join tournaments  on tournaments.id = tournament_videogame.tournament_id
   join player_tournament  on player_tournament.tournament_id =tournaments.id
   join players  on players.id =player_tournament.player_id
   where players.name like "S%";


8- Selezionare le città in cui è stato giocato il gioco dell'anno del 2018 (36)


  select tournaments.city from tournaments 
  join tournament_videogame on tournaments.id = tournament_videogame.to
  select tournaments.city from tournaments 
  join tournament_videogame on tournaments.id = tournament_videogame.tournament_id 
  join videogames on videogames.id = tournament_videogame.videogame_id
  join award_videogame on award_videogame.videogame_id =videogames.id 
  join awards on awards.id =award_videogame.award_id 
  where awards.name like "%anno" and award_videogame.year = 2018;


9- Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306)


  select players.name from players
  join player_tournament on player_tournament.player_id = players.id
  join tournaments on tournaments.id = player_tournament.tournament_id
  join tournament_videogame on tournament_videogame.tournament_id = tournaments.id
  join videogames on videogames.id = tournament_videogame.videogame_id
  join award_videogame  on award_videogame.videogame_id = videogames.id 
  join awards on awards.id = award_videogame.award_id
  where  awards.name LIKE "Gioco più atteso" A

